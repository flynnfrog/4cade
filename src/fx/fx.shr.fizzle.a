;license:MIT
;(c) 2019-2020 by qkumba/4am/John Brooks

!cpu 6502
!to "build/FX/SHR.FIZZLE",plain
*=$A000

addrs=$A100               ; [128 bytes, can be anywhere in main memory but don't cross page boundary]

         jsr   swapzp     ; copy LFSR code to zero page

         ldx   #$7F       ; create address lookup table
         lda   #$9F
         sec
-        sta   addrs, x
         sbc   #1
         dex
         bpl   -
         inx

         sta   $C005      ; pre-copy SHR SCB and palette
         ldy   #0
-        lda   $9D00, y
         sta   $9D00, y
         lda   $9E00, y
         sta   $9E00, y
         lda   $9F00, y
         sta   $9F00, y
         iny
         bne   -

         jsr   $0         ; call LFSR code on zero page

         lda   $2000      ; last lousy byte (because LFSR never hits 0)
         sta   $2000

         sta   $C004      ; restore and exit
swapzp   ldx   #(end-start-1)
-        lda   $0, x
         pha
         lda   start, x
         sta   $0, x
         pla
         sta   start, x
         dex
         bpl   -
         rts

start
!pseudopc 0 {
; in: X,Y=0
loop     txa
loop1    eor   #$60                  ; LFSR form 0x6000 with period 32767
         tax
loop2    lda   addrs, x
         sta   <dst+2
         lda   (<dst+1), y
dst      sta   $FD00, y
         txa
         lsr
         tax
         tya
         ror
         tay
         bcc   loop2
         bne   loop
         bit   $C000
         bmi   exit
         txa
         bne   loop1
exit     rts
}
end
